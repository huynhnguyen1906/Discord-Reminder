name: üõéÔ∏è Nitro„É™„Éû„Ç§„É≥„ÉÄ„Éº

on:
  schedule:
    - cron: "0 1 * * *" # 10:00 JST = 01:00 UTC
  workflow_dispatch:

jobs:
  daily-nitro-reminder:
    runs-on: ubuntu-latest
    steps:
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y jq

      - name: Generate and send Nitro reminder
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
        run: |
          #!/usr/bin/env bash
          set -euo pipefail

          # Ng√†y h√¥m nay (UTC)
          TODAY=$(date -u +'%Y-%m-%d')
          TARGET_DATE='2026-06-08'
          DAYS_LEFT=$(( ( $(date -d "$TARGET_DATE" +%s) - $(date -d "$TODAY" +%s) ) / 86400 ))

          # Ng∆∞·ªùi d√πng ƒë·ªÉ tag
          USER_ID='400990876463136768'

          # Danh s√°ch phong c√°ch ƒë·ªÉ random
          STYLES=("h√†i h∆∞·ªõc" "b·∫©n b·ª±a" "khinh th∆∞·ªùng" "ƒë√≤i n·ª£, b·∫°o l·ª±c")

          # Random m·ªôt phong c√°ch
          RANDOM_STYLE=${STYLES[$RANDOM % ${#STYLES[@]}]}

          echo "üé≤ Phong c√°ch h√¥m nay: $RANDOM_STYLE"

          # T·∫°o prompt v·ªõi phong c√°ch ƒë√£ random
          PROMPT="T·∫°o tin nh·∫Øn ti·∫øng Nh·∫≠t nh·∫Øc nh·ªü mua Discord Nitro cho m·ªçi ng∆∞·ªùi. C√≤n ${DAYS_LEFT} ng√†y. Message ph·∫£i g·ªçi t√™n tr·ª±c ti·∫øp ng∆∞·ªùi ƒë√≥ nh∆∞ anata, kimi, omae. Phong c√°ch: ${RANDOM_STYLE}. Ch·ªâ tr·∫£ v·ªÅ n·ªôi dung tin nh·∫Øn, kh√¥ng c·∫ßn mention. D√πng emoji ph√π h·ª£p v·ªõi phong c√°ch."

          # Payload cho OpenAI
          JSON_PAYLOAD=$(jq -n \
            --arg model 'gpt-4o-mini' \
            --arg prompt "$PROMPT" \
            --argjson max_tokens 200 \
            --argjson temperature 0.9 \
            '{
              model: $model,
              messages: [{ role: "user", content: $prompt }],
              max_tokens: $max_tokens,
              temperature: $temperature
            }')

          # G·ªçi OpenAI API
          AI_RESPONSE=$(curl -s -X POST https://api.openai.com/v1/chat/completions \
            -H "Authorization: Bearer $OPENAI_API_KEY" \
            -H "Content-Type: application/json" \
            -d "$JSON_PAYLOAD")

          # B·∫Øt l·ªói t·ª´ OpenAI
          ERROR_MSG=$(echo "$AI_RESPONSE" | jq -r '.error.message // empty')
          if [ -n "$ERROR_MSG" ]; then
            echo "‚ùå OpenAI API Error: $ERROR_MSG"
            exit 1
          fi

          # L·∫•y message
          AI_MESSAGE=$(echo "$AI_RESPONSE" | jq -r '.choices[0].message.content // empty')
          if [ -z "$AI_MESSAGE" ]; then
            AI_MESSAGE="Nitro„Çí„Åø„Çì„Å™„Å´Ë≤∑„Å£„Å¶„Åè„Çå„ÇãÊó•„Åæ„Åß„ÄÅ„ÅÇ„Å® **${DAYS_LEFT}Êó•** „Å†„ÇàÔºÅüéâ Ê∫ñÂÇô„ÅØ„Éê„ÉÉ„ÉÅ„É™Ôºüüòé‚ú®"
          fi

          FINAL_MESSAGE="<@${USER_ID}> ${AI_MESSAGE}"

          # Payload cho Discord
          WEBHOOK_PAYLOAD=$(jq -n \
            --arg content "$FINAL_MESSAGE" \
            --arg user_id "$USER_ID" \
            '{
              content: $content,
              allowed_mentions: { users: [$user_id] }
            }')

          # G·ª≠i l√™n Discord
          curl -s -X POST "$DISCORD_WEBHOOK_URL" \
            -H "Content-Type: application/json" \
            -d "$WEBHOOK_PAYLOAD"
